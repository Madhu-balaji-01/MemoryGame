/*
   This file was generated automatically by Alchitry Labs version 1.2.5.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module check_sequence_7 (
    input clk,
    input rst,
    input [15:0] stage,
    input [24:0] inp_seq,
    input [24:0] correct_seq,
    output reg [1:0] check_result
  );
  
  
  
  reg [0:0] M_result_d, M_result_q = 1'h0;
  
  wire [16-1:0] M_alu_alu;
  wire [1-1:0] M_alu_z;
  wire [1-1:0] M_alu_v;
  wire [1-1:0] M_alu_n;
  reg [16-1:0] M_alu_a;
  reg [16-1:0] M_alu_b;
  reg [6-1:0] M_alu_alufn_signal;
  alu_13 alu (
    .a(M_alu_a),
    .b(M_alu_b),
    .alufn_signal(M_alu_alufn_signal),
    .alu(M_alu_alu),
    .z(M_alu_z),
    .v(M_alu_v),
    .n(M_alu_n)
  );
  
  reg cmp1;
  
  reg cmp2;
  
  always @* begin
    M_result_d = M_result_q;
    
    M_alu_a = 16'h0000;
    M_alu_b = 16'h0000;
    M_alu_alufn_signal = 6'h00;
    
    case (stage[0+1-:2])
      2'h1: begin
        M_alu_a = inp_seq[0+15-:16];
        M_alu_b = correct_seq[0+15-:16];
        M_alu_alufn_signal = 6'h33;
        M_result_d = M_alu_alu[0+0-:1];
      end
      2'h2: begin
        M_result_d = (inp_seq == correct_seq);
      end
      2'h3: begin
        M_result_d = (inp_seq == correct_seq);
      end
      default: begin
        M_result_d = 1'h0;
      end
    endcase
    check_result = M_result_q;
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_result_q <= 1'h0;
    end else begin
      M_result_q <= M_result_d;
    end
  end
  
endmodule
